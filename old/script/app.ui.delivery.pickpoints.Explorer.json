{"attributes":{"name":"Explorer","packageName":"app.ui.delivery.pickpoints","externalRef":true,"fullName":"app.ui.delivery.pickpoints.Explorer","type":"class","isInternal":false,"isStatic":false,"isAbstract":false,"superClass":"croc.ui.Container","mixins":"","childClasses":"","line":1},"type":"class","children":[{"attributes":{},"type":"methods","children":[{"attributes":{"name":"getCheckedPoint","isStatic":false,"line":64,"fromProperty":"checkedPoint"},"type":"method","children":[{"attributes":{"text":"Возвращает значение свойства {@link #checkedPoint}"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"*"},"type":"entry"}]}]}]},{"attributes":{"name":"getLocationCode","isStatic":false,"line":185},"type":"method","children":[{"attributes":{"text":"Код населённого пункта"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"string"},"type":"entry"}]}]}]},{"attributes":{"name":"getMap","isStatic":false,"line":193},"type":"method","children":[{"attributes":{"text":"Карта"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"croc.ui.map.MultiMap"},"type":"entry"}]}]}]},{"attributes":{"name":"getPoints","isStatic":false,"line":201},"type":"method","children":[{"attributes":{"text":"Массив точек"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array"},"type":"entry"}]}]}]},{"attributes":{"name":"getView","isStatic":false,"line":68,"fromProperty":"view"},"type":"method","children":[{"attributes":{"text":"Возвращает значение свойства {@link #view}"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"*"},"type":"entry"}]}]}]},{"attributes":{"name":"onResize","isStatic":false,"line":135,"overriddenFrom":"croc.ui.Container"},"type":"method","children":[{"attributes":{"text":"Уведомить виджет о том, что размеры рамок изменились"},"type":"desc"},{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"reason"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"string"},"type":"entry"}]}]}]}]},{"attributes":{"name":"setCheckedPoint","isStatic":false,"line":64,"fromProperty":"checkedPoint"},"type":"method","children":[{"attributes":{"text":"Назначает значение свойства {@link #checkedPoint}"},"type":"desc"},{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"*"},"type":"entry"}]}]}]}]},{"attributes":{"name":"setView","isStatic":false,"line":68,"fromProperty":"view"},"type":"method","children":[{"attributes":{"text":"Назначает значение свойства {@link #view}"},"type":"desc"},{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"*"},"type":"entry"}]}]}]}]},{"attributes":{"name":"_getTemplate","isStatic":false,"access":"protected","line":209,"overriddenFrom":"croc.ui.Container"},"type":"method","children":[{"attributes":{"text":"Шаблон для элемента"},"type":"desc"},{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"options"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"$.Deferred|string"},"type":"entry"}]}]}]},{"attributes":{"name":"_initWidget","isStatic":false,"access":"protected","line":252,"overriddenFrom":"croc.ui.Container"},"type":"method","children":[{"attributes":{"text":"Инициализация виджета после его отрисовки в DOM"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"$.Deferred|undefined"},"type":"entry"}]}]}]},{"attributes":{"name":"_onPropertiesInitialized","isStatic":false,"access":"protected","line":219,"overriddenFrom":"croc.ui.Container"},"type":"method","children":[{"attributes":{"text":"Выполняется когда свойства виджета уже инициализированы"},"type":"desc"},{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"options"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]}]},{"attributes":{"name":"__adjustMapBounds","isStatic":false,"access":"private","line":273},"type":"method","children":[]},{"attributes":{"name":"__choosePickpoint","isStatic":false,"access":"private","line":304},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"pickpoint"},"children":[]}]}]},{"attributes":{"name":"__createCheckedServicesModel","isStatic":false,"access":"private","line":314},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"options"},"children":[]}]}]},{"attributes":{"name":"__createFilter","isStatic":false,"access":"private","line":349},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"options"},"children":[]}]},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"app.ui.delivery.pickpoints.Filter"},"type":"entry"}]}]}]},{"attributes":{"name":"__createListView","isStatic":false,"access":"private","line":365},"type":"method","children":[]},{"attributes":{"name":"__createMap","isStatic":false,"access":"private","line":393},"type":"method","children":[]},{"attributes":{"name":"__createPointsList","isStatic":false,"access":"private","line":415},"type":"method","children":[]},{"attributes":{"name":"__createServicesList","isStatic":false,"access":"private","line":462},"type":"method","children":[]},{"attributes":{"name":"__createVisiblePointsModel","isStatic":false,"access":"private","line":506},"type":"method","children":[]},{"attributes":{"name":"__isPointInServicesArray","isStatic":false,"access":"private","line":528},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"services"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"Array.&lt;Object&gt;"},"type":"entry"}]}]},{"attributes":{"optional":false,"name":"point"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"boolean"},"type":"entry"}]}]}]},{"attributes":{"name":"__normalizeData","isStatic":false,"access":"private","line":540},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"data"},"children":[]}]}]},{"attributes":{"name":"__setPickpointService","isStatic":false,"access":"private","line":607},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"pickpoint"},"children":[]},{"attributes":{"optional":false,"name":"service"},"children":[]}]}]},{"attributes":{"name":"__setUpBehavior","isStatic":false,"access":"private","line":619},"type":"method","children":[]},{"attributes":{"name":"__setUpChoosePointButtons","isStatic":false,"access":"private","line":678},"type":"method","children":[]},{"attributes":{"name":"__setUpMap","isStatic":false,"access":"private","line":728},"type":"method","children":[]},{"attributes":{"name":"__setUpPlacemarksArray","isStatic":false,"access":"private","line":750},"type":"method","children":[]},{"attributes":{"name":"__setUpPointsList","isStatic":false,"access":"private","line":775},"type":"method","children":[]},{"attributes":{"name":"__setUpServicesList","isStatic":false,"access":"private","line":816},"type":"method","children":[]},{"attributes":{"name":"__setUpViews","isStatic":false,"access":"private","line":805},"type":"method","children":[]},{"attributes":{"name":"__showPointOnMap","isStatic":false,"access":"private","line":861},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"point"},"children":[]}]}]}]},{"attributes":{"text":"Карта с точками самовывоза<br>todo выделить ViewModel"},"type":"desc"},{"attributes":{},"type":"methods-static","children":[]},{"attributes":{},"type":"constants","children":[{"attributes":{"name":"__DAYS_ALIASES","access":"private","line":9},"type":"constant","children":[]},{"attributes":{"name":"__MIN_POINTS_LIST_HEIGHT","access":"private","line":19},"type":"constant","children":[]},{"attributes":{"name":"__POINT_HEIGHT","access":"private","line":25},"type":"constant","children":[]},{"attributes":{"name":"__SHOW_HIDE_SERVICES_TEXT","access":"private","line":31},"type":"constant","children":[]},{"attributes":{"name":"__TEMPLATE_PICKPOINT_BUTTON","access":"private","line":37},"type":"constant","children":[]}]},{"attributes":{},"type":"properties","children":[{"attributes":{"name":"checkedPoint","propertyType":"new","line":64,"event":"changeCheckedPoint"},"type":"method","children":[]},{"attributes":{"name":"view","propertyType":"new","line":68,"event":"changeView","defaultValue":"\"map\""},"type":"method","children":[{"attributes":{"text":"Вид обозревателя"},"type":"desc"}]}]},{"attributes":{},"type":"events","children":[{"attributes":{"name":"changeCheckedPoint","line":64},"type":"event","children":[{"attributes":{"text":"Возбуждается при изменении значения свойства {@link #checkedPoint}"},"type":"desc"}]},{"attributes":{"name":"changeView","line":68},"type":"event","children":[{"attributes":{"text":"Возбуждается при изменении значения свойства {@link #view}"},"type":"desc"}]},{"attributes":{"name":"missingPointService","line":50},"type":"event","children":[{"attributes":{"text":"В данных отсутствует сервис для определённой точки"},"type":"desc"}]},{"attributes":{"name":"pointChosen","line":57},"type":"event","children":[]}]},{"attributes":{},"type":"constructor","children":[{"attributes":{"isCtor":true,"name":"ctor"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"options"},"type":"param","children":[{"attributes":{"text":"Опции для конструирования компонента<p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">autoResize</b><p style=\"display: block; margin-left: 10px; color: #666;\">Автоматически вызывать метод onResize при изменении размеров окна. Назначает свойство {@link #autoResize}</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>boolean</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">autoScan</b><p style=\"display: block; margin-left: 10px; color: #666;\">Автоматически сканировать DOM на предмет дочерних виджетов</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>boolean</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Container}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">checkEvents</b><p style=\"display: block; margin-left: 10px; color: #666;\">Проверять ли наличие события при попытке его возбуждения, подписки на него</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>boolean</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">init value: </b>true</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.Object}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #000\">checkedBrands</b><p style=\"display: block; margin-left: 10px;\">Выбранные изначально бренды. Превалирует над {@link #checkedServices}</p><p style=\"display: block; margin-left: 10px;\"><b>type: </b>Array.&lt;string&gt;</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #000\">checkedPoint</b><p style=\"display: block; margin-left: 10px;\">Выбранная точка самовывоза</p><p style=\"display: block; margin-left: 10px;\"><b>type: </b>string|number</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #000\">checkedServices</b><p style=\"display: block; margin-left: 10px;\">Выбранные изначально сервисы (true - выделить все сервисы)</p><p style=\"display: block; margin-left: 10px;\"><b>type: </b>Array.&lt;string&gt;|boolean</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #000\">choosePointEnabled</b><p style=\"display: block; margin-left: 10px;\">Нужна ли кнопка выбора точки</p><p style=\"display: block; margin-left: 10px;\"><b>type: </b>boolean</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">configure</b><p style=\"display: block; margin-left: 10px; color: #666;\">Объект {ключ=>функция}. Дочерние виджеты наследуют все функции из этого объекта. При совпадении атрибута\ndata-configure с одним из ключей в этом объекте вызвается соответствующая функция для конфигурации\nвиджета. Используется в случае если иерархия виджетов инициализируется из разметки и какие-либо из\nих опций невозможно передать через data-атрибуты (например, функции).</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>Object.&lt;string, function(croc.ui.Widget)&gt;</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">dItemDefaults</b><p style=\"display: block; margin-left: 10px; color: #666;\">алиас к itemsDefaults[defSection], где defSection - секция по-умолчанию</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>Object</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Container}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">el</b><p style=\"display: block; margin-left: 10px; color: #666;\">DOM-элемент виджета. Указывается, если виджет инициализируется из разметки.</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>string|Element|jQuery</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">extraCls</b><p style=\"display: block; margin-left: 10px; color: #666;\">Дополнительные классы для блока через пробел</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>{string}\ntodo заменить на array</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">hideMethod</b><p style=\"display: block; margin-left: 10px; color: #666;\">Метод сокрытия виджета при изменении свойства {@link #shown}.</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>string</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">init value: </b>&quot;hide&quot;</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">hostId</b><p style=\"display: block; margin-left: 10px; color: #666;\">Идентификатор виджета, по которому будет осуществляться поиск дочерних элементов и субэлементов</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>string</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">htmlTemplate</b><p style=\"display: block; margin-left: 10px; color: #666;\">Шаблон по-умолчанию</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>string|$.Deferred</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">identifier</b><p style=\"display: block; margin-left: 10px; color: #666;\">Идентификатор виджета, по которому его можно получить из родительского</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>string</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #000\">includesSubTemplates</b><p style=\"display: block; margin-left: 10px;\"><b>init value: </b>true</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">itemDefaults</b><p style=\"display: block; margin-left: 10px; color: #666;\">Конфигурация по-умолчанию добавляемая к items</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>Object.&lt;string, object&gt;|object</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Container}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">items</b><p style=\"display: block; margin-left: 10px; color: #666;\">Список дочерних виджетов (или их описаний)</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>object|croc.ui.Widget|Array.&lt;object|croc.ui.Widget&gt;|Object.&lt;string, object|croc.ui.Widget|Array.&lt;object|croc.ui.Widget&gt;&gt;</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Container}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">listeners</b><p style=\"display: block; margin-left: 10px; color: #666;\">Объект с обработчиками событий объекта</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>Object</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.Object}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #000\">locationCode</b><p style=\"display: block; margin-left: 10px;\">Код населённого пункта</p><p style=\"display: block; margin-left: 10px;\"><b>type: </b>string</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">meta</b><p style=\"display: block; margin-left: 10px; color: #666;\">мета-данные для добавления дочернего виджета</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>object</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">mod</b><p style=\"display: block; margin-left: 10px; color: #666;\">Модификатор блока (css класс mod_...)</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>string</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">onPreConstruct</b><p style=\"display: block; margin-left: 10px; color: #666;\">Метод вызывает до конструирования объекта, но после создания ссылки на него. Можно использовать тогда,\nкогда ссылка на объект нужна внешней среде до его полного конструирования.</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>function(croc.Object)</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.Object}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #000\">pickpointsData</b><p style=\"display: block; margin-left: 10px;\">Данные, которые возвращаются контроллером\nhttps://redmine.sotmarket.ru/projects/redesign-code/wiki/%D0%A2%D0%BE%D1%87%D0%BA%D0%B8_%D1%81%D0%B0%D0%BC%D0%BE%D0%B2%D1%8B%D0%B2%D0%BE%D0%B7%D0%B0</p><p style=\"display: block; margin-left: 10px;\"><b>type: </b>Object</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">renderTo</b><p style=\"display: block; margin-left: 10px; color: #666;\">Элемент-контейнер виджета. Передаётся если разметка виджета должна быть создана динамически.</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>string|Element|jQuery</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">replaceEl</b><p style=\"display: block; margin-left: 10px; color: #666;\">Указывается вместо renderTo, показывает, что новым элементом нужно заменить переданный</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>string|Element|jQuery</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">shown</b><p style=\"display: block; margin-left: 10px; color: #666;\">Назначает свойство {@link #shown}</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>boolean</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">init value: </b>true</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">style</b><p style=\"display: block; margin-left: 10px; color: #666;\">Css-стили корневого элемента виджета</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>Object</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">width</b><p style=\"display: block; margin-left: 10px; color: #666;\">Ширина виджета</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>number|string</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">wrapperEl</b><p style=\"display: block; margin-left: 10px; color: #666;\">Враппер виджета</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>jQuery</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">wrapperTemplate</b><p style=\"display: block; margin-left: 10px; color: #666;\">html, в который следует обернуть виджет (должен присутствовать маркер {item})</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>string</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">_addClasses</b><p style=\"display: block; margin-left: 10px; color: #666;\">Дополнительные классы для корневого элемента</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>Array.&lt;string&gt;</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">_checkRequiredOptions</b><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">_childClass</b><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>string</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">_parentSection</b><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">_parentWidget</b><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">_useChildrenIdentifiers</b><p style=\"display: block; margin-left: 10px; color: #666;\">Если true то полагается на идентификаторы дочерних виджетов, а не на порядок их следования в секции\nпри связывании дочерних виджетов с найденными элементами</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>boolean</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">init value: </b>true</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Container}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">_wrapSection</b><p style=\"display: block; margin-left: 10px; color: #666;\">Если контейнер является враппером над одним виджетом без внешнего html. Если передано true,\nто считается что оборачивается секция по умолчанию, иначе должна быть передана оборачиваемая\nсекция.</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>string|boolean</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Container}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">_wrapped</b><p style=\"display: block; margin-left: 10px; color: #666;\">Виджет обёрнут родительским контейнером {@see croc.ui.Container.options._wrapSection}</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>boolean</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.ui.Widget}</p></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<i>Разверните для просмотра опций</i>"},"type":"desc"}]}]}]}