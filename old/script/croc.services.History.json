{"attributes":{"name":"History","packageName":"croc.services","externalRef":true,"fullName":"croc.services.History","type":"class","isInternal":false,"isStatic":false,"isAbstract":false,"superClass":"croc.Object","mixins":"","childClasses":"","line":1},"type":"class","children":[{"attributes":{},"type":"methods","children":[{"attributes":{"name":"getContextDisposer","isStatic":false,"line":83},"type":"method","children":[{"attributes":{"text":"Возвращает disposer, свойство которого bound равно true при значении контекста равном текущему и false иначе"},"type":"desc"},{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"context"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"string"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"globalDisposer"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"croc.util.Disposer"},"type":"entry"}]}]}]},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"croc.util.Disposer"},"type":"entry"}]}]}]},{"attributes":{"name":"getObservable","isStatic":false,"line":66},"type":"method","children":[{"attributes":{"text":"Объект со свойствами зарегистрированными через {@link #registerParam}, на которые можно выполнять биндинг"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"croc.Object"},"type":"entry"}]}]}]},{"attributes":{"name":"getParam","isStatic":false,"line":74},"type":"method","children":[{"attributes":{"text":"Получить значение параметра"},"type":"desc"},{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"name"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"string"},"type":"entry"}]}]}]},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"*"},"type":"entry"}]}]}]},{"attributes":{"name":"getParams","isStatic":false,"line":18,"fromProperty":"params"},"type":"method","children":[{"attributes":{"text":"Возвращает значение свойства {@link #params}"},"type":"desc"},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"name":"registerAndListen","isStatic":false,"line":99},"type":"method","children":[{"attributes":{"text":"Регистрирует свойство через {@link #registerParam} и устанавливает его прослушивание через listenProperty"},"type":"desc"},{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"name"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"string"},"type":"entry"}]}]},{"attributes":{"optional":false,"name":"listener"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"function"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"context"},"children":[]}]},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"Function"},"type":"entry"}]}]}]},{"attributes":{"name":"registerParam","isStatic":false,"line":111},"type":"method","children":[{"attributes":{"text":"Регистрирует параметр как свойство {@link #getObservable}"},"type":"desc"},{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"name"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"string"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"initialValue"},"children":[{"attributes":{"text":"установить значение по-умолчанию, если другого значения нет"},"type":"desc"}]},{"attributes":{"optional":true,"name":"dontChangeHash","defaultValue":"false"},"children":[{"attributes":{"text":"не изменять hash страницы пока не будет изменено свойство observable<br>{name}ChangesHash"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"boolean"},"type":"entry"}]}]}]}]},{"attributes":{"name":"setParam","isStatic":false,"line":142},"type":"method","children":[{"attributes":{"text":"Установить значение параметра. Если value === true, то в хеш значение сериализутся просто как name (иначе<br>как name=value)"},"type":"desc"},{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"name"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"string"},"type":"entry"}]}]},{"attributes":{"optional":false,"name":"value"},"children":[]},{"attributes":{"optional":true,"name":"internal","defaultValue":"false"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"boolean"},"type":"entry"}]}]}]}]},{"attributes":{"name":"setParamContext","isStatic":false,"line":200},"type":"method","children":[{"attributes":{"text":"Установить контекст для параметра. Когда контекст сменяется, то параметр удаляется. Когда контекст возвращается к<br>текущему значению, то при переданном параметре restore=true параметр восстанавливается."},"type":"desc"},{"attributes":{},"type":"params","children":[{"attributes":{"optional":false,"name":"param"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"string"},"type":"entry"}]}]},{"attributes":{"optional":false,"name":"context"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"string"},"type":"entry"}]}]},{"attributes":{"optional":true,"name":"restore","defaultValue":"false"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"boolean"},"type":"entry"}]}]}]}]},{"attributes":{"name":"__deserializeParams","isStatic":false,"access":"private","line":216},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"hash"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{},"type":"return","children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"name":"__setParams","isStatic":false,"access":"private","line":18,"fromProperty":"params"},"type":"method","children":[{"attributes":{"text":"Назначает значение свойства {@link #params}"},"type":"desc"},{"attributes":{},"type":"params","children":[{"attributes":{"name":"value"},"children":[{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]}]},{"attributes":{"name":"__sync","isStatic":false,"access":"private","line":235},"type":"method","children":[]}]},{"attributes":{"text":"Сервис истории браузера. Ожидается что хеш адресной строки будет соответствовать шаблону: name1=value1&name2=value2&..."},"type":"desc"},{"attributes":{},"type":"properties","children":[{"attributes":{"name":"params","propertyType":"new","line":18,"event":"changeParams"},"type":"method","children":[{"attributes":{"text":"Объект со всеми параметрами хеша"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{},"type":"events","children":[{"attributes":{"name":"changeParam","line":8},"type":"event","children":[{"attributes":{"text":"Был изменён один из параметров хеша"},"type":"desc"}]},{"attributes":{"name":"changeParams","line":18},"type":"event","children":[{"attributes":{"text":"Возбуждается при изменении значения свойства {@link #params}"},"type":"desc"}]}]},{"attributes":{},"type":"constructor","children":[{"attributes":{"isCtor":true,"name":"ctor"},"type":"method","children":[{"attributes":{},"type":"params","children":[{"attributes":{"optional":true,"name":"options"},"type":"param","children":[{"attributes":{"text":"Опции для конструирования компонента<p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">checkEvents</b><p style=\"display: block; margin-left: 10px; color: #666;\">Проверять ли наличие события при попытке его возбуждения, подписки на него</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>boolean</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">init value: </b>true</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.Object}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">listeners</b><p style=\"display: block; margin-left: 10px; color: #666;\">Объект с обработчиками событий объекта</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>Object</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.Object}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">onPreConstruct</b><p style=\"display: block; margin-left: 10px; color: #666;\">Метод вызывает до конструирования объекта, но после создания ссылки на него. Можно использовать тогда,\nкогда ссылка на объект нужна внешней среде до его полного конструирования.</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>function(croc.Object)</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.Object}</p></p><p style=\"display: block; margin-top: 10px;\"><b style=\"color: #999\">_checkRequiredOptions</b><p style=\"display: block; margin-left: 10px; color: #666;\">Проверять, переданы ли все необходимые опции</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">type: </b>boolean</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">init value: </b>true</p><p style=\"display: block; margin-left: 10px; color: #666;\"><b style=\"color: #999\">inherited from: </b> {@link croc.Object}</p></p>"},"type":"desc"},{"attributes":{},"type":"types","children":[{"attributes":{"type":"Object"},"type":"entry"}]}]}]},{"attributes":{"text":"<i>Разверните для просмотра опций</i>"},"type":"desc"}]}]}]}